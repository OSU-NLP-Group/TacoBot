import logging
from taco.core.regex.regex_template import RegexTemplate
from taco.response_generators.food.regex_templates import DoubtfulTemplate
from taco.core.response_generator_datatypes import PromptType, ResponseGeneratorResult, PromptResult, AnswerType
from taco.core.response_priority import ResponsePriority, PromptType
from taco.core.entity_linker.entity_groups import ENTITY_GROUPS_FOR_EXPECTED_TYPE
from taco.core.response_generator import Treelet
from taco.core.entity_linker.entity_groups import EntityGroupsForExpectedType
from taco.core.util import infl
from cobot_core.service_module import ToolkitServiceModule
from cobot_core.service_module import LocalServiceModule

from ask_sdk_model.services.service_exception import ServiceException
from cobot_core.alexa_list_management import AlexaListManagement
# from taco.taco_intent_by_rule import TacoIntentByRule
# from taco.response_modules.choice.utils.general import get_and_list_prompt

from taco.response_generators.taco_rp.taco_intent_by_rule import TacoIntentByRule
from taco.response_generators.taco_rp.choice.treelets.utils.general import get_and_list_prompt
import json

import random

from cobot_core.service_module import LocalServiceModule

from taco.response_generators.taco_rp.exception.state import State, ConditionalState
from taco.response_generators.taco_rp.exception.treelets.template_manager import select_bad_task_template


DANGER = [
    "a. c.",
    "air conditioner",
    "air conditioning",
    "aircraft",
    "ak-47",
    "a. k.",
    "armed",
    "arsenal",
    "arson",
    "artillery",
    "asphalt",
    "asphyxiating",
    "assassin",
    "assassinate",
    "atomic",
    "attack",
    "attacker",
    "asbestos",
    "back actor",
    "backhoe",
    "ballistic",
    "bedbug",
    "blackmail",
    "boiler",
    "bomb",
    "break into",
    "brake",
    "build a deck",
    "build a house",
    "build a patio",
    "build a wall",
    "bulldozer",
    "buncher",
    "burn",
    "campfire",
    "car jack",
    "car jacking",
    "carjack",
    "carjacking",
    "chainsaw",
    "charger",
    "chemical",
    "choke",
    "circuit",
    "cliff",
    "combat",
    "compactor",
    "construct a deck",
    "construct a house",
    "construct a patio",
    "construct a wall",
    "contaminant",
    "convert shower",
    "corrosive",
    "crane",
    "cut down branches",
    "dead",
    "deadly",
    "death",
    "delete",
    "demolish",
    "demolition",
    "destroy",
    "die"
    "drown",
    "drug",
    "drywall",
    "dui",
    "d. u. i.",
    "dump truck",
    "electric",
    "electricity",
    "electrical",
    "electrifying",
    "engine",
    "evacuate",
    "excavate",
    "excavation",
    "excavator",
    "expand room",
    "explode",
    "explosion",
    "explosive",
    "exterminate",
    "extermination",
    "fatal",
    "fight",
    "fighting",
    "fill concrete",
    "fire",
    "fire cracker",
    "firearm",
    "fireball",
    "firecracker",
    "fireplace",
    "firework",
    "flame",
    "flamethrower",
    "flammable",
    "flash powder",
    "flash sight",
    "forge",
    "fork lift",
    "forklift",
    "foundation",
    "fumes",
    "fumigate",
    "fumigation",
    "fuse",
    "gas",
    "gasline",
    "genocide",
    "glock",
    "grader",
    "grappling hook",
    "ground water",
    "groundwater",
    "gta",
    "g. t. a.",
    "gun",
    "hack",
    "hacking",
    "handgun",
    "harm",
    "hazardous",
    "hemp",
    "high pressure",
    "hold your breath",
    "holocaust",
    "homicide",
    "hvac",
    "h. v. a. c.",
    "install a dishwasher",
    "install a garbage disposal",
    "install a shower",
    "install a skylight",
    "install a tub",
    "install an appliance",
    "install an interior light",
    "install appliances",
    "install floor",
    "install flooring",
    "install interior light",
    "install interior lighting",
    "install lighting",
    "install shower",
    "install tub",
    "kidnap",
    "kill",
    "knife",
    "knock",
    "lay a floor",
    "lay floor",
    "lay flooring",
    "lay tile",
    "lead",
    "lead-based",
    "lethal",
    "manslaughter",
    "marksman",
    "massacre",
    "microblade",
    "microblading",
    "missle",
    "murder",
    "narcotic",
    "noxious",
    "nuclear",
    "outlet",
    "overdose",
    "oxygen depleted",
    "pallet jack",
    "pave",
    "paver",
    "pest control",
    "pick a lock",
    "pile boring",
    "pile driving",
    "pipe",
    "piping",
    "pirate",
    "pirating",
    "pistol",
    "plumb",
    "plumbing",
    "poison",
    "pour concrete",
    "punch",
    "quickdraw",
    "quicklime",
    "radiation",
    "radioactive",
    "rape",
    "reach truck",
    "rear actor",
    "remove a safety",
    "remove branches",
    "remove safety",
    "repair concrete",
    "repave",
    "resurface driveway",
    "revolver",
    "rifle",
    "rob",
    "rocket",
    "roof",
    "sabotage",
    "scaffold",
    "scaffolding",
    "sewer",
    "shingle",
    "shock",
    "shoot",
    "shooting",
    "shop lift",
    "shoplift",
    "shot",
    "shotgun",
    "slaughter",
    "smoke",
    "smoking",
    "snipe",
    "sniper",
    "socket",
    "solder",
    "soldering",
    "solvent",
    "spaceship",
    "spear",
    "stab",
    "steal",
    "stock picker",
    "strike",
    "suffocate",
    "supply line",
    "sword",
    "tactical",
    "tactically",
    "tattoo",
    "tattooing",
    "telehandler",
    "termite",
    "terror",
    "terrorism",
    "terrorist",
    "thermonuclear",
    "threat",
    "threaten",
    "torrent",
    "toxic",
    "tractor",
    "transmission",
    "trencher",
    "turret truck",
    "uranium",
    "vent",
    "ventilation",
    "waste water treatment",
    "water heater",
    "water tank",
    "water supply",
    "weld",
    "welding",
    "wire",
    "wiring",
    "weapon",
    "wreak",
    "vandalism",
    "venom",
    "voltage"
]

LEGAL = [
    "accuse",
    "affidavit",
    "appeal",
    "arrest",
    "arrested",
    "attorney",
    "bail",
    "bankrupt",
    "bankruptcy",
    "blackmail",
    "charge",
    "citizenship",
    "claim",
    "complaint",
    "contract",
    "corpse",
    "court",
    "crime",
    "criminal",
    "custody",
    "deed",
    "defend",
    "discharge",
    "discrimination",
    "evict",
    "eviction",
    "exempt",
    "felony",
    "fraud",
    "government assistance",
    "h1b",
    "h. one b.",
    "hearing",
    "human",
    "immigrant",
    "immigration",
    "incarcerate",
    "incarcerated",
    "judicial",
    "judiciary",
    "juridical",
    "jurisdiction",
    "law",
    "lawsuit",
    "lawyer",
    "legal",
    "legally",
    "legislative",
    "lease",
    "license",
    "litigate",
    "litigation",
    "malpractice",
    "notarize",
    "notary",
    "ownership",
    "parole",
    "patent",
    "perjury",
    "permit",
    "petition",
    "plaintiff",
    "plea",
    "probation",
    "proceeding",
    "property",
    "prosecute",
    "report",
    "represent",
    "risk assessment",
    "risk management",
    "sentence",
    "sue",
    "tenant",
    "testimony",
    "trespass",
    "trial",
    "tribunal",
    "trustee",
    "vandalism",
    "verdict",
    "violate",
    "violation",
    "visa",
    "warrant",
    "witness"
]

FINANCIAL = [
    "401k",
    "accounting",
    "accounts",
    "accrual",
    "acquisition",
    "advertise",
    "advertising",
    "annuity",
    "arbitrage",
    "audit",
    "bank",
    "banking",
    "bet",
    "betting",
    "binance",
    "bitcoin",
    "block chain",
    "blockchain",
    "blue chip",
    "bond",
    "budget",
    "bullion",
    "business",
    "buyer",
    "cardano",
    "cash",
    "coin",
    "coinbase",
    "collateral",
    "collect rent",
    "commercial",
    "commission",
    "compensation",
    "compensatory",
    "credit",
    "crypto",
    "cryptocurrency",
    "currency",
    "debit",
    "debt",
    "delayed rent",
    "dividend",
    "dogecoin",
    "dollar",
    "earning",
    "economic",
    "economy",
    "estate",
    "etf",
    "e. t. f.",
    "ethereum",
    "etoro",
    "expensify",
    "finance",
    "financial",
    "fiscal",
    "for rent",
    "fund",
    "gamble",
    "gambler",
    "gambling",
    "grace period",
    "grant",
    "gross pay",
    "import duties",
    "income",
    "inflation",
    "insurance",
    "interest",
    "invest",
    "investing",
    "investment",
    "ipo",
    "i. p. o.",
    "ira",
    "i. r. a.",
    "irs",
    "i. r. s.",
    "lien",
    "loan",
    "market",
    "marketing",
    "mint.com",
    "monero",
    "monetary",
    "money",
    "morningstar",
    "mortgage",
    "mutual fund",
    "negotiate",
    "nonpayment of rent",
    "overtime pay",
    "partial rent",
    "pay check",
    "pay for",
    "pay rent",
    "polkadot",
    "poshmark",
    "probate",
    "prorate rent",
    "prosper.com",
    "quickbooks",
    "recession",
    "rent a house",
    "rent a property",
    "rent a room",
    "rent an apartment",
    "rent free period",
    "rent increase",
    "rent low",
    "rent out",
    "rent your",
    "retire",
    "retirement",
    "revenue",
    "robin hood",
    "robinhood",
    "sale",
    "saving",
    "sell",
    "selling",
    "shares",
    "spend",
    "spending",
    "stellar",
    "stock",
    "tax",
    "tether",
    "trade",
    "trading",
    "uniswap",
    "vat",
    "v. a. t.",
    "wager",
    "withhold rent",
    "xrp",
    "x. r. p."
]

MEDICAL = [
    "a cold",
    "acne",
    "adrenaline",
    "aids",
    "allergen",
    "allergic",
    "allergy",
    "alopecia",
    "alzheimer",
    "alzheimer\u2019s",
    "anemia",
    "anxiety",
    "arrhythmia",
    "artery",
    "arthritis",
    "asthma",
    "autism",
    "bacteria",
    "biopsy",
    "bladder",
    "bleed",
    "bleeding",
    "bloating",
    "blood",
    "body",
    "bowel",
    "braces",
    "breast",
    "cancer",
    "cardiovascular",
    "cervical",
    "cervix",
    "chemo",
    "chemotherapy",
    "childbirth",
    "chlamydia",
    "cholesterol",
    "chronic fatigue",
    "circumcision",
    "cirrhosis",
    "colon",
    "coma",
    "corona",
    "coronavirus",
    "cough",
    "coughing",
    "conjunctivitis",
    "constipation",
    "contagious",
    "contraceptive",
    "covid",
    "cure",
    "cyst",
    "dementia",
    "dengue",
    "dental",
    "depression",
    "diabetes",
    "diabetic",
    "diagnose",
    "diaphragm",
    "diarrhea",
    "digest",
    "digestive",
    "disease",
    "disorder",
    "dizzy",
    "dysfunction",
    "doctor",
    "e coli",
    "e. coli",
    "ear",
    "ejaculation",
    "emergency",
    "erectile dysfunction",
    "eye",
    "fertility",
    "fever",
    "fitness",
    "flatulence",
    "flu",
    "genetic",
    "get better",
    "gonorrhea",
    "headache",
    "hemorrhoid",
    "heal",
    "health",
    "hearing",
    "heart",
    "heartburn",
    "hemophilia",
    "hepatitis",
    "hernia",
    "herpes",
    "hiv",
    "h. i. v.",
    "hives",
    "hormonal",
    "hormone",
    "hyperhidrosis",
    "hyperhydrosis",
    "illness",
    "immune",
    "immunity",
    "indigestion",
    "infected",
    "infection",
    "inflammation",
    "inflammatory",
    "influenza",
    "intestine",
    "itch",
    "itching",
    "jaundice",
    "know if you have",
    "light headed",
    "liposuction",
    "lung",
    "lupus",
    "lymphatic",
    "malaria",
    "medical",
    "medication",
    "medicine",
    "menopause",
    "menstrual",
    "menstruation",
    "mental",
    "migraine",
    "moles",
    "morfine",
    "morphine",
    "mrsa",
    "m. r. s. a.",
    "mutism",
    "nausea",
    "nauseous",
    "necrosis",
    "neuropathy",
    "norovirus",
    "nose",
    "ovarian",
    "pain",
    "painkiller",
    "pancreatitis",
    "parkinson",
    "parkinson\u2019s",
    "penis",
    "physician",
    "pill",
    "pituitary",
    "plantar fasciitis",
    "pneumonia",
    "postpartum",
    "pregnancy",
    "pregnant",
    "prenatal",
    "prescription",
    "prostate",
    "pulmonary",
    "rabies",
    "recover",
    "rectal",
    "relieve",
    "respiratory",
    "rosacea",
    "rubella",
    "salmonella",
    "sick",
    "sickness",
    "short of breath",
    "sinus",
    "skeletal system",
    "skin",
    "sleep",
    "slim",
    "smallpox",
    "sneeze",
    "soothe",
    "sperm",
    "stamina",
    "stomachache",
    "stroke",
    "surgeon",
    "surgery",
    "swab",
    "swollen",
    "symptom",
    "syphilis",
    "syndrome",
    "tablets",
    "tall",
    "taller",
    #"teeth",
    "tetanus",
    "thyroid",
    "tinnitus",
    "tooth",
    "treat a",
    "treatment",
    "tuberculosis",
    "tumor",
    "ulcer",
    "urinary",
    "urticaria",
    "uterine",
    "uterus",
    "vaccine",
    "vaccinated",
    "vagina",
    "vasectomy",
    "vein",
    "vicodin",
    "virus",
    "vitiligo",
    "vomit",
    "wart",
    "warts",
    "wellness",
    "wound",
    "xanax"
]

UNSUPPORTED = [
    "addict",
    "addicted",
    "addiction",
    "afghanistan",
    "alcohol",
    "alcoholic",
    "al-qaeda",
    "anodyne",
    "ask out",
    "baccarat",
    "blackjack",
    "biden",
    "big six wheel",
    "bixby",
    "blunt",
    "bingo",
    "body jewelry",
    "bong",
    "breathalyzer",
    "bribe",
    "bully",
    "bullying",
    "camouflage",
    "cannabis",
    "cannibis",
    "catholic",
    "cbd",
    "c. b. d.",
    "cheat",
    "cheating",
    "chillum",
    "china",
    "christian",
    "church",
    "cigar",
    "cigarette",
    "cigarillo",
    "cocaine",
    "codeine",
    "conceal",
    "congress",
    "cortana",
    "craps",
    "date",
    #"dip",
    "dipping",
    "drone",
    "druggie",
    "druggy",
    "drunk",
    "eavesdrop",
    "ecig",
    "edible",
    "escape",
    "extort",
    "extortion",
    "faith",
    "fiance",
    "find a missing",
    "find lost",
    "find missing",
    "five card draw",
    "flirt",
    "follow someone",
    "for free",
    "french inhale",
    "gauge",
    "gauged",
    "gentlemen",
    "ghb",
    "g. h. b.",
    "global warming",
    "god",
    "google assistant",
    "government",
    "hallucinate",
    "hallucinogen",
    "hangover",
    "heroin",
    "hidden",
    "hide",
    "hindu",
    "hitler",
    "hobo",
    "hook up with",
    "hookah",
    "hppd",
    "h. p. p. d.",
    "human rights",
    "humidor",
    "hungover",
    "hypnosis",
    "hypnotize",
    "id",
    "i. d.",
    "identity",
    "infiltrate",
    "infiltration",
    "intercourse",
    "intoxicate",
    "intoxicated",
    "intoxicating",
    "intoxication",
    "irish waterfall",
    "islam",
    "jail",
    "jailbreak",
    "jesus",
    "jew",
    "jihad",
    "junkie",
    "keno",
    "ketamine",
    "kief",
    "kiss",
    "liquor",
    "lottery",
    "lover",
    "lsd",
    "l. s. d.",
    "magic flight launch box",
    "marijuana",
    "marriage",
    "marry",
    "media",
    "mission",
    "mistress",
    "modi",
    "mormon",
    "muslim",
    "naked",
    "narcotic",
    "nation",
    "nazi",
    "nicotine",
    "north korea",
    "nose ring",
    "not get caught",
    "nudity",
    "opiate",
    "opioid",
    "opium",
    "pachinko",
    "pack a bowl",
    "pakistan",
    "pcp",
    "p. c. p.",
    "pedophilia",
    "pierce",
    "piercing",
    "poker",
    "policy",
    "politics",
    "porn",
    "pornography",
    "president",
    "prison",
    "receive mail without your parents knowing",
    "relation",
    "relationship",
    "religion",
    "roll a joint",
    "roulette",
    "russia",
    "scratch card",
    "sedative",
    "see under a door",
    "senate",
    "senator",
    "sensitive",
    "sex",
    "sexual",
    "shisha",
    "skoal",
    "siri",
    "slot machine",
    "smoker",
    "sneak",
    "sneaky",
    "snuff",
    "snus",
    "sober",
    "soporific",
    "special k",
    "special k.",
    "spliff",
    "spy",
    "stalk",
    "stalker",
    "stalking",
    "stealth",
    "stealthily",
    "stealthy",
    "steroid",
    "stupefacient",
    "supremacy",
    "survive",
    "syria",
    "t break",
    "t-break",
    "taleban",
    "taliban",
    "texas hold",
    "thc",
    "t. h. c.",
    "tobacco",
    "track a phone",
    "track footprints",
    "trip sitter",
    "triple x",
    "triple x.",
    "troops",
    "trump",
    "vape",
    "vaping",
    "vapor",
    "vaporizer",
    "war",
    "weed",
    "world",
    "xxx",
    "x. x. x."
]

PRIVACY = [
    "aadhaar number",
    "aadhar card number",
    "account password",
    "bank account",
    "business id number",
    "business identification number",
    "credit card",
    "credit card number",
    "debit card",
    "debit card number",
    "dl number",
    "driver's license number",
    "driving license number",
    "european health insurance card",
    "fiscal code",
    "genetic test result",
    "health insurance card number",
    "health insurance number",
    "identity card number",
    "insee code",
    "medical card number",
    "national health index number",
    "national health insurance number",
    "national health service number",
    "national id number",
    "national identity document",
    "national identity number",
    "national insurance number",
    "nhi number",
    "nie number",
    "office id card number",
    "pan card number",
    "pan number",
    "passport number",
    "pension insurance number",
    "permanent account number",
    "personal account",
    "pin number",
    "salary account",
    "savings account",
    "social insurance number",
    "social security number",
    "ssn",
    "tax file number",
    "tax identification number",
    "tds number",
    "unique population registry code",
    "vehicle registration number",
    "vehicle registration plate number",
    "voter id number",
    "voter identification number",
    "voting identification number"
]

detect_keyword = lambda x, k: (k in x) if ' ' in k else (k in x.split())

logger = logging.getLogger('tacologger')


class Taco_excet_bad_Treelet(Treelet):
    name = "Taco_excet_bad_Treelet"
    

    def classify_user_response(self):
        assert False, "This should never be called."


    def get_response(self, state_manager, priority=ResponsePriority.WEAK_CONTINUE, **kwargs) -> ResponseGeneratorResult:
        """ Returns the response. """
        state, utterance, response_types = self.get_state_utterance_response_types()

        
        text = state_manager.current_state.text.lower()

        if "suicide" in text or "kill myself" in text or True: # True
                response_state = {
                    'response': select_bad_task_template(0), 'shouldEndSession': True
                }

        for w in DANGER:
            if detect_keyword(text, w):
                response_state = {
                    'response': select_bad_task_template(1), 'shouldEndSession': True
                }
        
        for w in LEGAL:
            if detect_keyword(text, w):
                response_state = {
                    'response': select_bad_task_template(2), 'shouldEndSession': False
                }

        for w in FINANCIAL:
            if detect_keyword(text, w):
                response_state = {
                    'response': select_bad_task_template(3), 'shouldEndSession': False
                }

        for w in MEDICAL:
            if detect_keyword(text, w):
                response_state = {
                    'response': select_bad_task_template(4), 'shouldEndSession': False
                }

        for w in UNSUPPORTED:
            if detect_keyword(text, w):
                response_state = {
                    'response': select_bad_task_template(5), 'shouldEndSession': False
                }

        for w in PRIVACY:
            if detect_keyword(text, w):
                response_state = {
                    'response': select_bad_task_template(6), 'shouldEndSession': False
                }

        
        response = response_state['response']

        return ResponseGeneratorResult(text=response, priority=priority,
                                       needs_prompt=False, state=state, cur_entity=None,
                                       conditional_state=ConditionalState(
                                           prompt_treelet=self.name,))

    def get_best_candidate_user_entity(self, utterance, cur_food):
        def condition_fn(entity_linker_result, linked_span, entity):
            return EntityGroupsForExpectedType.food_related.matches(entity) and entity.name != cur_food
        entity = self.rg.state_manager.current_state.entity_linker.top_ent(condition_fn) or self.rg.state_manager.current_state.entity_linker.top_ent()
        if entity is not None:
            user_answer = entity.talkable_name
            plural = entity.is_plural
        else:
            nouns = self.rg.state_manager.current_state.corenlp['nouns']
            if len(nouns):
                user_answer = nouns[-1]
                plural = True
            else:
                user_answer = utterance.replace('i like', '').replace('my favorite', '').replace('i love', '')
                plural = True

        return user_answer, plural

